// <auto-generated />
using System;
using ERP.Database.ERPDbContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace ERP.Database.Migrations
{
    [DbContext(typeof(ERPDBContext))]
    [Migration("20250619033945_trenantandchequedetails19062025")]
    partial class trenantandchequedetails19062025
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("ERP.Models.Entities.Invoice", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<string>("InvoiceClearedBy")
                        .HasColumnType("text");

                    b.Property<DateTime?>("InvoiceClearedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("InvoiceDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("InvoiceNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ModifiedAt")
                        .HasColumnType("text");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("text");

                    b.Property<decimal?>("PaidAmount")
                        .HasColumnType("numeric");

                    b.Property<string>("PaymentTerms")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<long>("PurchaseOrderId")
                        .HasColumnType("bigint");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.HasIndex("PurchaseOrderId");

                    b.HasIndex("Status");

                    b.ToTable("Invoice");
                });

            modelBuilder.Entity("ERP.Models.Entities.InvoiceItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<long>("InvoiceId")
                        .HasColumnType("bigint");

                    b.Property<int>("InvoiceQuantity")
                        .HasColumnType("integer");

                    b.Property<long>("PurchaseOrderItemId")
                        .HasColumnType("bigint");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("decimal(12,2)");

                    b.HasKey("Id");

                    b.HasIndex("InvoiceId");

                    b.HasIndex("PurchaseOrderItemId");

                    b.ToTable("InvoiceItem");
                });

            modelBuilder.Entity("ERP.Models.Entities.Landlord", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<string>("LessorsEmiratesId")
                        .HasColumnType("text");

                    b.Property<string>("LessorsName")
                        .HasColumnType("text");

                    b.Property<string>("LicenseNo")
                        .HasColumnType("text");

                    b.Property<string>("LicensingAuthority")
                        .HasColumnType("text");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("text");

                    b.Property<string>("OwnersName")
                        .HasColumnType("text");

                    b.Property<string>("PhoneNo")
                        .HasColumnType("text");

                    b.Property<long>("rePrapertyId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("Landlord");
                });

            modelBuilder.Entity("ERP.Models.Entities.LandlordHistory", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<long>("LandlordId")
                        .HasColumnType("bigint");

                    b.Property<string>("LessorsEmiratesId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("LessorsName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("LicenseNo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("LicensingAuthority")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("text");

                    b.Property<string>("OwnersName")
                        .HasColumnType("text");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<long>("rePrapertyId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("LandlordHistory");
                });

            modelBuilder.Entity("ERP.Models.Entities.PurchaseOrder", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("POConvertedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("PONumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<long>("PRId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("PRId")
                        .IsUnique();

                    b.ToTable("PurchaseOrder");
                });

            modelBuilder.Entity("ERP.Models.Entities.PurchaseOrderItems", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long>("POId")
                        .HasColumnType("bigint");

                    b.Property<long>("PurchaseRequestItemId")
                        .HasColumnType("bigint");

                    b.Property<int>("ReceivedQuantity")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("POId");

                    b.HasIndex("PurchaseRequestItemId");

                    b.ToTable("PurchaseOrderItems");
                });

            modelBuilder.Entity("ERP.Models.Entities.PurchaseRequest", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<bool>("IsPOConverted")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("text");

                    b.Property<string>("PRNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.Property<decimal>("SubTotal")
                        .HasColumnType("numeric");

                    b.Property<long>("VendorId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("Status");

                    b.HasIndex("VendorId");

                    b.ToTable("PurchaseRequests");
                });

            modelBuilder.Entity("ERP.Models.Entities.PurchaseRequestItems", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("numeric");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<long>("PurchaseRequestId")
                        .HasColumnType("bigint");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer");

                    b.Property<decimal>("Rate")
                        .HasColumnType("numeric");

                    b.Property<string>("UOM")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("PurchaseRequestId");

                    b.ToTable("PurchaseRequestItems");
                });

            modelBuilder.Entity("ERP.Models.Entities.ReCheque", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("BankName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<double>("ChequeAmount")
                        .HasColumnType("double precision");

                    b.Property<DateTimeOffset>("ChequeDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("ChequeNo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ChqStatus")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<long>("ContractId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("text");

                    b.Property<long>("TenantId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("ReCheque");
                });

            modelBuilder.Entity("ERP.Models.Entities.ReContracts", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<double>("AnnualRent")
                        .HasColumnType("double precision");

                    b.Property<DateTimeOffset>("ContractDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTimeOffset>("ContractFromDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<double>("ContractRent")
                        .HasColumnType("double precision");

                    b.Property<string>("ContractStatus")
                        .HasColumnType("text");

                    b.Property<DateTimeOffset>("ContractToDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<string>("ModeOfPayment")
                        .HasColumnType("text");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("text");

                    b.Property<double>("SecurityDepositAmount")
                        .HasColumnType("double precision");

                    b.Property<long>("TenantId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("ReContracts");
                });

            modelBuilder.Entity("ERP.Models.Entities.ReProperty", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("BulidingName")
                        .HasColumnType("text");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<string>("Location")
                        .HasColumnType("text");

                    b.Property<string>("LocationLL")
                        .HasColumnType("text");

                    b.Property<string>("MakaniNo")
                        .HasColumnType("text");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("text");

                    b.Property<string>("PlotNo")
                        .HasColumnType("text");

                    b.Property<string>("PremisesNo")
                        .HasColumnType("text");

                    b.Property<string>("PropertyArea")
                        .HasColumnType("text");

                    b.Property<string>("PropertyType")
                        .HasColumnType("text");

                    b.Property<string>("PropertyUsage")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("ReProperty");
                });

            modelBuilder.Entity("ERP.Models.Entities.RePropertyHistory", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("BulidingName")
                        .HasColumnType("text");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<string>("Location")
                        .HasColumnType("text");

                    b.Property<string>("LocationLL")
                        .HasColumnType("text");

                    b.Property<string>("MakaniNo")
                        .HasColumnType("text");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("text");

                    b.Property<long>("PlotId")
                        .HasColumnType("bigint");

                    b.Property<string>("PlotNo")
                        .HasColumnType("text");

                    b.Property<string>("PremisesNo")
                        .HasColumnType("text");

                    b.Property<string>("PropertyArea")
                        .HasColumnType("text");

                    b.Property<string>("PropertyType")
                        .HasColumnType("text");

                    b.Property<string>("PropertyUsage")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("RePropertyHistory");
                });

            modelBuilder.Entity("ERP.Models.Entities.ReTenants", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("text");

                    b.Property<string>("TenantEmail")
                        .HasColumnType("text");

                    b.Property<string>("TenantEmiratedId")
                        .HasColumnType("text");

                    b.Property<string>("TenantName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("TenantPhone")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("ReTenants");
                });

            modelBuilder.Entity("ERP.Models.Entities.Status", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Status");
                });

            modelBuilder.Entity("ERP.Models.Entities.Vendor", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ContactPerson")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("text");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.Property<string>("VendorId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("Status");

                    b.ToTable("Vendor");
                });

            modelBuilder.Entity("ERP.Models.Entities.Invoice", b =>
                {
                    b.HasOne("ERP.Models.Entities.PurchaseOrder", "PurchaseOrders")
                        .WithMany()
                        .HasForeignKey("PurchaseOrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ERP.Models.Entities.Status", "Statuses")
                        .WithMany("Invoice")
                        .HasForeignKey("Status")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PurchaseOrders");

                    b.Navigation("Statuses");
                });

            modelBuilder.Entity("ERP.Models.Entities.InvoiceItem", b =>
                {
                    b.HasOne("ERP.Models.Entities.Invoice", "Invoices")
                        .WithMany()
                        .HasForeignKey("InvoiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ERP.Models.Entities.PurchaseOrderItems", "PurchaseOrderItems")
                        .WithMany("InvoiceItems")
                        .HasForeignKey("PurchaseOrderItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Invoices");

                    b.Navigation("PurchaseOrderItems");
                });

            modelBuilder.Entity("ERP.Models.Entities.PurchaseOrder", b =>
                {
                    b.HasOne("ERP.Models.Entities.PurchaseRequest", "PurchaseRequests")
                        .WithOne("PurchaseOrders")
                        .HasForeignKey("ERP.Models.Entities.PurchaseOrder", "PRId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PurchaseRequests");
                });

            modelBuilder.Entity("ERP.Models.Entities.PurchaseOrderItems", b =>
                {
                    b.HasOne("ERP.Models.Entities.PurchaseOrder", "PurchaseOrders")
                        .WithMany("PurchaseOrderItems")
                        .HasForeignKey("POId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ERP.Models.Entities.PurchaseRequestItems", "PurchaseRequestItems")
                        .WithMany("PurchaseOrderItems")
                        .HasForeignKey("PurchaseRequestItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PurchaseOrders");

                    b.Navigation("PurchaseRequestItems");
                });

            modelBuilder.Entity("ERP.Models.Entities.PurchaseRequest", b =>
                {
                    b.HasOne("ERP.Models.Entities.Status", "Statuses")
                        .WithMany("PurchaseRequests")
                        .HasForeignKey("Status")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ERP.Models.Entities.Vendor", "Vendor")
                        .WithMany("PurchaseRequests")
                        .HasForeignKey("VendorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Statuses");

                    b.Navigation("Vendor");
                });

            modelBuilder.Entity("ERP.Models.Entities.PurchaseRequestItems", b =>
                {
                    b.HasOne("ERP.Models.Entities.PurchaseRequest", "PurchaseRequest")
                        .WithMany("PurchaseRequestItems")
                        .HasForeignKey("PurchaseRequestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PurchaseRequest");
                });

            modelBuilder.Entity("ERP.Models.Entities.Vendor", b =>
                {
                    b.HasOne("ERP.Models.Entities.Status", "Statuses")
                        .WithMany("Vendors")
                        .HasForeignKey("Status")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Statuses");
                });

            modelBuilder.Entity("ERP.Models.Entities.PurchaseOrder", b =>
                {
                    b.Navigation("PurchaseOrderItems");
                });

            modelBuilder.Entity("ERP.Models.Entities.PurchaseOrderItems", b =>
                {
                    b.Navigation("InvoiceItems");
                });

            modelBuilder.Entity("ERP.Models.Entities.PurchaseRequest", b =>
                {
                    b.Navigation("PurchaseOrders")
                        .IsRequired();

                    b.Navigation("PurchaseRequestItems");
                });

            modelBuilder.Entity("ERP.Models.Entities.PurchaseRequestItems", b =>
                {
                    b.Navigation("PurchaseOrderItems");
                });

            modelBuilder.Entity("ERP.Models.Entities.Status", b =>
                {
                    b.Navigation("Invoice");

                    b.Navigation("PurchaseRequests");

                    b.Navigation("Vendors");
                });

            modelBuilder.Entity("ERP.Models.Entities.Vendor", b =>
                {
                    b.Navigation("PurchaseRequests");
                });
#pragma warning restore 612, 618
        }
    }
}
